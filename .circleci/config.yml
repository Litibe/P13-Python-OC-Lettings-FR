version: '2.1'
orbs:
  python: circleci/python@2.0.3
  heroku: circleci/heroku@1.2.6
executors:
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps
jobs:
  env-tests:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - python/install-packages:
          pip-dependency-file: requirements.txt
          pkg-manager: pip
      - python/install-packages:
          args: pytest
          pkg-manager: pip
          pypi-cache: false
      - run:
          command: |
            pytest
          name: Pytest
      - run:
          command: |
            flake8
          name: Flake8
  build_docker_and_push_to_hub:
    executor: docker-publisher
    environment:
      IMAGE_NAME: litibe/p13_django
      - SECRET_KEY=$SECRET_KEY
      - DEBUG=$DEBUG
      - DATABASE_NAME=$DATABASE_NAME
      - SENTRY_SDK=$SENTRY_SDK
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            docker login -u "$DOCKER_HUB_USER_ID" -p "$DOCKER_HUB_PASSWORD"
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
  deploy_heroku: 
    executor: heroku/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - heroku/deploy-via-git
workflows:
  PinelineP13:
    jobs:
      - env-tests
      - build_docker_and_push_to_hub:
          requires: 
            - env-tests
          filters:
            branches:
              only: master
      - deploy_heroku:
          requires:
            - build_docker_and_push_to_hub
          filters:
            branches:
              only: master
