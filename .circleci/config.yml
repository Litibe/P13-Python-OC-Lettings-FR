version: '2.1'
orbs:
  python: circleci/python@2.0.3
  heroku: circleci/heroku@1.2.6
executors:
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps
jobs:
  env-tests:
    executor: python/default
    steps:
      - checkout
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          command: |
            . venv/bin/activate
            pytest
          name: Pytest
      - run:
          command: |
            . venv/bin/activate
            flake8
          name: Flake8
      - run:
          name : git status
          command : |
            git status
      - run:
          name: create .env and db.json
          command: |
            (echo SECRET_KEY=$SECRET_KEY
            echo DEBUG=$DEBUG
            echo DATABASE_NAME=$DATABASE_NAME
            echo SENTRY_SDK=$SENTRY_SDK
            ) >> .env 
            . venv/bin/activate
            python manage.py dumpdata > db.json
            git add .env
            git add db.json
            git commit -m ".env and db.json"
      - run:
          name: manage.py check --deploy 
          command: |
            . venv/bin/activate
            python manage.py check --deploy
      
  build_docker_and_push_to_hub:
    executor: docker-publisher
    environment:
      IMAGE_NAME: litibe/p13_django
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: create .env 
          command: |
            (echo SECRET_KEY=$SECRET_KEY
            echo DEBUG=$DEBUG
            echo DATABASE_NAME=$DATABASE_NAME
            echo SENTRY_SDK=$SENTRY_SDK
            ) >> .env 
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
            docker images
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            docker login -u "$DOCKER_HUB_USER_ID" -p "$DOCKER_HUB_PASSWORD"
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
  deploy_heroku: 
    executor: heroku/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: create .env 
          command: |
            (echo SECRET_KEY=$SECRET_KEY
            echo DEBUG=$DEBUG 
            echo DATABASE_NAME=$DATABASE_NAME
            echo SENTRY_SDK=$SENTRY_SDK
            ) >> .env
      - run:
          name: Storing previous commit
          command: |
            git rev-parse HEAD > ./commit.txt
      - heroku/install
      - run:
          name : create app Heroku if not exist
          command : |
            if [ "$(curl -sL -w '%{http_code}' http://$HEROKU_APP_NAME.herokuapp.com -o /dev/null)" = "404" ]; then
                heroku create $HEROKU_APP_NAME --region eu
            else
                echo "Heroku app $HEROKU_APP_NAME already created !"
            fi
      - run:
          name: Set Var Env into heroku
          command: | 
            heroku config:set SECRET_KEY=${SECRET_KEY} -a $HEROKU_APP_NAME
            heroku config:set SENTRY_SDK=${SENTRY_SDK} -a $HEROKU_APP_NAME
            heroku config:set DEBUG=${DEBUG} -a $HEROKU_APP_NAME
            heroku config:set DATABASE_NAME=${DATABASE_NAME} -a $HEROKU_APP_NAME
            heroku config:set ENV=PRODUCTION -a $HEROKU_APP_NAME
      - heroku/deploy-via-git
      - run:
          name: make migration db
          command: | 
            heroku run python migrate -a $HEROKU_APP_NAME
      - run:
          name: install db into heroku
          command: | 
            heroku run python manage.py loaddata db.json -a $HEROKU_APP_NAME

workflows:
  PinelineP13:
    jobs:
      - env-tests
      - build_docker_and_push_to_hub:
          requires: 
            - env-tests
          filters:
            branches:
              only: master
      - deploy_heroku:
          requires:
            - build_docker_and_push_to_hub
          filters:
            branches:
              only: master
