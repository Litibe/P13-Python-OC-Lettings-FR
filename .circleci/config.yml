version: '2.1'
orbs:
  python: circleci/python@2.0.3
  heroku: circleci/heroku@1.2.6
executors:
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps
jobs:
  env-tests:
    executor: python/default
    steps:
      - checkout
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          command: |
            . venv/bin/activate
            pytest
          name: Pytest
      - run:
          command: |
            . venv/bin/activate
            flake8
          name: Flake8
  build_docker_and_push_to_hub:
    executor: docker-publisher
    environment:
      IMAGE_NAME: litibe/p13_django
      SECRET_KEY: $SECRET_KEY
      DEBUG: $DEBUG
      DATABASE_NAME: $DATABASE_NAME
      SENTRY_SDK: $SENTRY_SDK
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: create .env 
          command: |
            (echo SECRET_KEY=${SECRET_KEY} 
            echo DEBUG=${DEBUG} 
            echo DATABASE_NAME=${DATABASE_NAME} 
            echo SENTRY_SDK=${SENTRY_SDK} 
            ) >> .env 
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
            docker images
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            docker login -u "$DOCKER_HUB_USER_ID" -p "$DOCKER_HUB_PASSWORD"
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
  deploy_heroku: 
    executor: heroku/default
    environment:
      SECRET_KEY: $SECRET_KEY
      DEBUG: $DEBUG
      DATABASE_NAME: $DATABASE_NAME
      SENTRY_SDK: $SENTRY_SDK
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: create .env 
          command: |
            (echo SECRET_KEY=${SECRET_KEY} 
            echo DEBUG=${DEBUG} 
            echo DATABASE_NAME=${DATABASE_NAME} 
            echo SENTRY_SDK=${SENTRY_SDK} 
            ) >> .env
      - run:
          name: Storing previous commit
          command: |
            git rev-parse HEAD > ./commit.txt
      - heroku/install
      - setup_remote_docker
      - run:
          name: deploy heroku
          command: |
            heroku container:login
            heroku container:push web --arg DEBUG=${DEBUG} --arg DATABASE_NAME=${DATABASE_NAME} -a $HEROKU_APP_NAME
            heroku container:release web -a $HEROKU_APP_NAME
workflows:
  PinelineP13:
    jobs:
      - env-tests
      - build_docker_and_push_to_hub:
          requires: 
            - env-tests
          filters:
            branches:
              only: master
      - deploy_heroku:
          requires:
            - build_docker_and_push_to_hub
          filters:
            branches:
              only: master
